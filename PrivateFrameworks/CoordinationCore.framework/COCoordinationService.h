/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoordinationCore.framework/CoordinationCore
 */

@interface COCoordinationService : NSObject <COServiceDelegate, COStateManagerServiceInterface, NSXPCListenerDelegate> {
    NSArray * _clients;
    NSObject<OS_dispatch_queue> * _dispatchQueue;
    COMeshController * _homeMesh;
    bool  _isMigrating;
    NSXPCListener * _listener;
    struct os_unfair_lock_s { 
        unsigned int _os_unfair_lock_opaque; 
    }  _lock;
    NSDictionary * _meshes;
    NSArray * _observers;
    COMeshController * _pairMesh;
    double  _pingMaximum;
    double  _pingMinimum;
    <COCoordinationServiceListenerProvider> * _provider;
    NSArray * _roleObservers;
    COMeshController * _roomMesh;
    NSDictionary * _services;
    unsigned long long  _type;
    COMeshController * _zoneMesh;
}

@property (nonatomic, copy) NSArray *clients;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) COMeshController *homeMesh;
@property (nonatomic, readonly) NSXPCListener *listener;
@property (nonatomic, retain) NSDictionary *meshes;
@property (nonatomic, copy) NSArray *observers;
@property (nonatomic, retain) COMeshController *pairMesh;
@property (nonatomic, readonly) double pingMaximum;
@property (nonatomic, readonly) double pingMinimum;
@property (nonatomic, readonly) <COCoordinationServiceListenerProvider> *provider;
@property (nonatomic, copy) NSArray *roleObservers;
@property (nonatomic, retain) COMeshController *roomMesh;
@property (nonatomic, readonly) NSDictionary *services;
@property (readonly) Class superclass;
@property (nonatomic, readonly) unsigned long long type;
@property (nonatomic, retain) COMeshController *zoneMesh;

+ (void)setSingleton:(id)arg1;
+ (id)singleton;
+ (void)startWithConstituentType:(unsigned long long)arg1;

- (void).cxx_destruct;
- (id)_clusterNameForMeshController:(id)arg1;
- (void)_completeMigration;
- (void)_continueInitialization;
- (void)_continueMigration;
- (void)_controllerForCluster_unsafe:(id)arg1 label:(id)arg2 result:(id /* block */)arg3;
- (id)_controllerForHomeKitEntity_unsafe:(id)arg1 label:(id)arg2;
- (id)_initWithConstituentType:(unsigned long long)arg1;
- (id)_initWithConstituentType:(unsigned long long)arg1 listenerProvider:(id)arg2;
- (void)_initializeAddOns;
- (void)_initializeServices;
- (void)_initiateMigrationFrom:(long long)arg1;
- (void)_linkServices:(id)arg1 toMeshController:(id)arg2 forCluster:(id)arg3;
- (void)_linkServicesToMeshController:(id)arg1;
- (void)_notifyRoleObserver:(id)arg1 roleOfMember:(id)arg2 inCluster:(id)arg3 didChangeTo:(id)arg4;
- (void)_notifyRoleObservers;
- (id)_roleForCurrentDevice;
- (id)_roleForMember:(id)arg1 inCluster:(id)arg2;
- (void)_significantHomeChange:(id)arg1;
- (void)_unlinkServicesFromMeshController:(id)arg1;
- (void)_withLock:(id /* block */)arg1;
- (id)clients;
- (void)dealloc;
- (void)didStopMeshController:(id)arg1;
- (id)dispatchQueue;
- (void)ensureOnDemandControllerForCluster:(id)arg1 completion:(id /* block */)arg2;
- (id)homeMesh;
- (bool)isMediaSystemLeader;
- (void)isMediaSystemLeader:(id /* block */)arg1;
- (id)listener;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)meshes;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)observers;
- (id)pairMesh;
- (double)pingMaximum;
- (double)pingMinimum;
- (id)provider;
- (void)registerForMediaSystemLeaderChange;
- (void)registerForRoleChangesOfMember:(id)arg1 inCluster:(id)arg2;
- (void)requestCompositionForCluster:(id)arg1 withCallback:(id /* block */)arg2;
- (id)roleObservers;
- (id)roomMesh;
- (id)services;
- (void)setClients:(id)arg1;
- (void)setHomeMesh:(id)arg1;
- (void)setMeshes:(id)arg1;
- (void)setObservers:(id)arg1;
- (void)setPairMesh:(id)arg1;
- (void)setRoleObservers:(id)arg1;
- (void)setRoomMesh:(id)arg1;
- (void)setZoneMesh:(id)arg1;
- (unsigned long long)type;
- (void)unregisterForMediaSystemLeaderChange;
- (void)unregisterForRoleChangesOfMember:(id)arg1 inCluster:(id)arg2;
- (id)zoneMesh;

@end
